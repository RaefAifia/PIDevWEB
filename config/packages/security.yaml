security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

    encoders:
        # use your user class name here
        App\Entity\User:
            # Use native password encoder
            # This value auto-selects the best possible hashing algorithm
            # (i.e. Sodium when available).
            algorithm: auto
    providers:
        users_in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:

            entry_point: App\Security\AuthenticationEntryPoint
            access_denied_url: /login
            anonymous: lazy
            provider: users_in_memory
            guard:
                authenticators:
                    - App\Security\AppCustomAuthenticator
            logout:
                path: app_logout
                target: app_login
                # where to redirect after logout
                # target: app_any_route
            #remember_me:
                #secret: '%kernel.secret%'
                #lifetime: 25000


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:

        - { path: ^/Admin, roles: ROLE_ADMIN }
        - { path: ^/profil, roles: ROLE_USER }
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER


